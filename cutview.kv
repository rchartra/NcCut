<BackgroundColor@Widget>
    background_color: 1, 1, 1, 1
    canvas.before:
        Color:
            rgba: root.background_color
        Rectangle:
            size: self.size
            pos: self.pos
# Now you can simply Mix the `BackgroundColor` class with almost
# any other widget... to give it a background.
<BackgroundLabel@Label+BackgroundColor>
    background_color: 0, 0, 0, 0
    # Default the background color for this label
    # to r 0, g 0, b 0, a 0

<HomeScreen>

    BoxLayout:
        orientation: "vertical"
        size_hint: (0.8, 1)
        spacing: dp(10)
        padding: [dp(20), dp(20), dp(10), dp(20)]

        RelativeLayout:

            size_hint: (1, 0.9)

            ViewerWindow:
                id: view
                size_hint: (1, 1)
                #size_hint: (1, 0.7)
                #pos: self.pos

                canvas:
                    Color:
                        rgb: [.7, .7, .7]
                    Rectangle:
                        size: self.size
                        pos: self.pos

        FileGrab:
            size_hint: (1, 0.1)
            spacing: dp(10)
            padding: [dp(10), dp(10), dp(10), dp(10)]
            canvas:
                Color:
                    rgb: [.1, .1, .2]
                Rectangle:
                    size: self.size
                    pos: self.pos

            TextInput:
                id: file_in
                size_hint: (0.7, 1)
                hint_text: "Enter Image or NetCDF File Path"

            Button:
                size_hint: (0.3, 1)
                text: "Go"
                on_press: root.gobtn()

    GridLayout:
        cols: 1
        size_hint: (0.2, 1)
        pos_hint: {"x":0.8}
        padding: [dp(10), dp(20), dp(20), dp(20)]
        spacing: [dp(20)]

        Button:
            text: "Single Transect"
            on_press: root.transectbtn("single")

        Button:
            text: "Multiple Transects"
            on_press: root.transectbtn("multi")

        Button:
            text: "Marker"
            on_press: root.transectbtn("marker")

        Button:
            text: "Multiple Marker"
            on_press: root.transectbtn("filament")

        Button:
            text: "Rotate"
            on_press: root.rotate()

        Button:
            text: "Quit"
            on_press: root.quitbtn()